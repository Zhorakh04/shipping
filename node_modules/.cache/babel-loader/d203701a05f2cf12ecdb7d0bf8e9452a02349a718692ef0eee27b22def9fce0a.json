{"ast":null,"code":"var _jsxFileName = \"/Users/shelllogix/Desktop/shipping/src/components/AuctionPlayer/TimerCircleRow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst eachStep = 100 / 17;\nconst TimerCircleRow = ({\n  bidValue\n}) => {\n  _s();\n  const [current, setCurrent] = useState(1);\n  const [timerRowCount, setTimerRowCount] = useState(2);\n  useEffect(() => {\n    const idTimout = setInterval(() => {\n      if (current > 18) {\n        setTimerRowCount(1);\n        setCurrent(1);\n      } else {\n        setTimerRowCount(eachStep * current);\n        setCurrent(current + 1);\n      }\n    }, 1000);\n    return () => clearInterval(idTimout);\n  }, [current]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"70\",\n      cy: \"70\",\n      r: \"73\",\n      strokeDashoffset: 445 - 400 * timerRowCount / 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TimerCircleRow, \"PTqMuOSRgJRUsWhTZKb2CDwuWSU=\");\n_c = TimerCircleRow;\nexport default TimerCircleRow;\nvar _c;\n$RefreshReg$(_c, \"TimerCircleRow\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","eachStep","TimerCircleRow","bidValue","_s","current","setCurrent","timerRowCount","setTimerRowCount","idTimout","setInterval","clearInterval","children","cx","cy","r","strokeDashoffset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shelllogix/Desktop/shipping/src/components/AuctionPlayer/TimerCircleRow.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst eachStep: number = 100 / 17;\nconst TimerCircleRow = ({bidValue}:any) => {\n  const [current, setCurrent] = useState<number>(1);\n  const [timerRowCount, setTimerRowCount] = useState<number>(2);\n    \n  useEffect(() => {\n    const idTimout = setInterval(() => {\n      if (current > 18) {\n        setTimerRowCount(1);\n        setCurrent(1);\n      } else {\n        setTimerRowCount(eachStep * current);\n        setCurrent(current + 1);\n      }\n    }, 1000);\n    \n    return () => clearInterval(idTimout);\n  }, [current]);\n\n  \n\n  return (\n    <>\n      <circle\n        cx=\"70\"\n        cy=\"70\"\n        r=\"73\"\n        strokeDashoffset={445 - (400 * (timerRowCount)) / 100}\n      ></circle>\n    </>\n  );\n};\n\nexport default TimerCircleRow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,QAAgB,GAAG,GAAG,GAAG,EAAE;AACjC,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EACjD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAS,CAAC,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIL,OAAO,GAAG,EAAE,EAAE;QAChBG,gBAAgB,CAAC,CAAC,CAAC;QACnBF,UAAU,CAAC,CAAC,CAAC;MACf,CAAC,MAAM;QACLE,gBAAgB,CAACP,QAAQ,GAAGI,OAAO,CAAC;QACpCC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAIb,oBACEP,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MACEe,EAAE,EAAC,IAAI;MACPC,EAAE,EAAC,IAAI;MACPC,CAAC,EAAC,IAAI;MACNC,gBAAgB,EAAE,GAAG,GAAI,GAAG,GAAIT,aAAc,GAAI;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC,gBACV,CAAC;AAEP,CAAC;AAAChB,EAAA,CA9BIF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}